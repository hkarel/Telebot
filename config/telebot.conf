---
### YAML syntax ###

# Конфигурирование системы логирования
logger:
    # Уровень логирования. Допускаются следующие значения: error, warning, info,
    # verbose, debug, debug2. По умолчанию используется info
    level: debug

    # Определяет будет ли пересоздаваться log-файл  при  перезапуске  программы
    # (флаг: true/false). Если параметр равен 'false', то log-файл будет  пере-
    # создаваться при каждом перезапуске программы, в противном случае  логиро-
    # вание будет выполняться в существующий файл
    continue: true

    max_line_size: 3000

    # Наименование файла логирования
    file: /var/opt/telebot/log/telebot.log

    # Определяет файл конфигурирования сейверов и фильтров для системы логирования
    conf: "" # /etc/telebot/telebot.logger.conf

    filters:
        # Наименование фильтра
      - name: default
        type: content
        mode: exclude
        filtering_errors: false

        contents: [
            "Webhook TCP input: {\"update_id\":",
        ]

# Настройки состояния приложения
state:
    file: /var/opt/telebot/state/telebot.state

bot:
    # Идентификатор бота
    id: "0000000000:AAFB4fmcn0Ytuqxk01twO-PgWSJieTWdi0Q"

    # Количество потоков обработки для сообщений
    processing_count: 2

    # Спам сообщение отправляется в групповой чат если его идентификатора нет
    # в списке group_chats. Цель: вынудить владельца/администратора группового
    # чата исключить бота из списка участников, чтобы не нагружать бота сообще-
    # ниями, которые он не будет обрабатывать
    spam_message:
        active: true
        text:
            Это Telebot Anti-Spam. Ваш чат не зарегистрирован в файле
            конфигурации бота. Удалите бота из группы.

webhook:
    # Создание Webhook-сертификата (https://core.telegram.org/bots/self-signed)
    #   openssl req -newkey rsa:2048 -sha256 -nodes -keyout private.key -x509 -days 365 -out cert.pem -subj "/C=RU/CN=HOST_OR_DOMAIN"
    #
    # В качестве параметра HOST_OR_DOMAIN нужно указать публичный IP-адрес (или
    # доменное имя), где будет располагаться бот.  В дальнейшем Telegram-сервис
    # будет обращаться именно по этому публичному адресу или домену.
    # В результате выполнения команды будут созданы два файла: private.key и cert.pem
    #
    # Просмотр созданного сертификата
    #   openssl x509 -text -noout -in cert.pem
    #
    # Регистрация Telegram-Webhook:
    #   - В качестве параметра HOST_OR_DOMAIN в сертификате было указано доменное имя my.domain.com
    #       curl -F"url=https://my.domain.com:8443/" -F"certificate=@cert.pem" https://api.telegram.org/botTOKENID/setWebhook
    #
    #   - В качестве параметра HOST_OR_DOMAIN в сертификате был указан публичный IP-адрес 179.2.35.60
    #       curl -F"url=https://179.2.35.60:8443/" -F"certificate=@cert.pem" https://api.telegram.org/botTOKENID/setWebhook
    #
    # Для Webhook-портов допускается указывать следующие значения: 443, 80, 88, 8443.
    # Вместо параметра TOKENID нужно подставить идентификатор Telegram-бота.

    port: 8443
    certificate: /etc/telebot/ssl/cert.pem
    private_key: /etc/telebot/ssl/private.key

...
